// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// User user
//
// swagger:model User
type User struct {

	// attributes
	Attributes *UserAttributes `json:"attributes,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User) validateAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.Attributes) { // not required
		return nil
	}

	if m.Attributes != nil {
		if err := m.Attributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("attributes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *User) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User) UnmarshalBinary(b []byte) error {
	var res User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// UserAttributes user attributes
//
// swagger:model UserAttributes
type UserAttributes struct {

	// admin
	// Read Only: true
	Admin *bool `json:"admin,omitempty"`

	// api key expires at
	// Read Only: true
	// Format: date-time
	APIKeyExpiresAt strfmt.DateTime `json:"api_key_expires_at,omitempty"`

	// api token
	// Read Only: true
	APIToken string `json:"api_token,omitempty"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// groups
	Groups []string `json:"groups"`

	// last name
	LastName string `json:"last_name,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this user attributes
func (m *UserAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPIKeyExpiresAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserAttributes) validateAPIKeyExpiresAt(formats strfmt.Registry) error {

	if swag.IsZero(m.APIKeyExpiresAt) { // not required
		return nil
	}

	if err := validate.FormatOf("attributes"+"."+"api_key_expires_at", "body", "date-time", m.APIKeyExpiresAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserAttributes) UnmarshalBinary(b []byte) error {
	var res UserAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
